version: '3.7'

services:
  main:
    container_name: main
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 9229:9229
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - webnet
    depends_on:
      - redis
      - mongo
  redis:
    container_name: redis
    image: redis:5
    networks:
      - webnet

  mongo-express:
    image: mongo-express
    ports:
        - 8081:8081
    environment:
        - DB_HOST=db
        - DB_PORT=27017
    #     ME_CONFIG_BASICAUTH_USERNAME: root
    #     ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2019!
    #     ME_CONFIG_MONGODB_PORT: 27017
    #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
    #     ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    depends_on: 
        - mongo
    # networks:
    #     - mongo-compose-network
  mongo:
    image: mongo
    # container_name: mongo
    ports:
        - '27017:27017'
    # environment:
    #     MONGO_INITDB_ROOT_USERNAME: root
    #     MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
    volumes:
        - ./data:/data/db
#   postgres:
#     container_name: postgres
#     image: postgres:12
#     networks:
#       - webnet
#     environment:
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_USER: ${DB_USERNAME}
#       POSTGRES_DB: ${DB_DATABASE_NAME}
#       PG_DATA: /var/lib/postgresql/data
#     ports:
#       - 5555:5555
#     volumes:
#       - pgdata:/var/lib/postgresql/data
networks:
  webnet:
# volumes:
#   pgdata: